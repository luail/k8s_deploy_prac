# [1] Cluster Autoscaler가 사용할 ServiceAccount (서비스 계정)
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cluster-autoscaler
  namespace: kube-system
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::443370682320:role/eks-cluster-autoscaler-role
---
# [2] ClusterRole: Cluster Autoscaler가 클러스터 리소스를 다루기 위한 권한 정의
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cluster-autoscaler        # 역할 이름
rules:
  # 노드, 파드 리스트, 조회, 감시, 수정 권한
  - apiGroups: [""]
    resources: ["nodes", "pods"]
    verbs: ["get", "list", "watch", "patch"]
  # 디플로이먼트 조회, 리스트, 수정
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get", "list", "patch"]
  # 레플리카셋 조회, 리스트, 수정
  - apiGroups: ["extensions"]
    resources: ["replicasets"]
    verbs: ["get", "list", "patch"]
  # 클러스터 오토스케일러는 위에 보면 1개로 설정해놨음.
  # 하지만 여러개가 뜰 수도 있는 상황을 대비해서 leader election이 기본적으로 작동한다.
  # 따라서 클러스터 오토스케일러 1개만 작동하기 위해서 leases 권한이 필요하다.
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "create", "update", "patch", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumes", "persistentvolumeclaims", "replicationcontrollers", "services", "namespaces"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources: ["statefulsets", "daemonsets", "replicasets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["policy"]
    resources: ["poddisruptionbudgets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes", "csidrivers", "csistoragecapacities"]
    verbs: ["get", "list", "watch"]
  
  # 추가 (ConfigMap)
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["create", "list", "get", "update", "watch"]
  
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch", "patch", "update", "delete"] 

  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"] 
    verbs: ["get", "list", "watch"]

  - apiGroups: [""]
    resources: ["pods/eviction"]
    verbs: ["create"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
---
# [3] ClusterRoleBinding: 서비스 계정에 위에서 정의한 역할을 부여
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cluster-autoscaler        # 바인딩 이름
subjects:
  - kind: ServiceAccount
    name: cluster-autoscaler      # [1]에서 만든 서비스 계정
    namespace: kube-system        # 네임스페이스 일치
roleRef:
  kind: ClusterRole
  name: cluster-autoscaler        # [2]에서 만든 ClusterRole 이름
  apiGroup: rbac.authorization.k8s.io